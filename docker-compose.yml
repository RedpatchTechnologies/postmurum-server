version: '3'



services:
  postgres:
    image: postgres:latest
    ports:
      - "8001:5432"
    volumes:
      - "db-data:/var/lib/postgresql/data"
    environment:
       - POSTGRES_USER=postgres
       - POSTGRES_PASSWORD=demo
  go:
     build: './backend'
     #links:
      #   - postgres:db # [other container]:[alias in this container]
         # this will create environment variables in the go container
         # with ip and port info for the postgres container
         # also creates entries in /etc/hosts with ip info
     ports:
         - "3000" # this is port i'm exposing in the container
     volumes: 
         - /go/src/   
         - '.:/my_app'
     depends_on:
        - postgres      
     links:
        - postgres
     #entrypoint: ./wait-for-postgres.sh postgres 5432
  frontend:
     build:
       context: ./frontend
       args:
          app_env: ${APP_ENV}
     volumes:
       - ./frontend/src:/frontend/src 
     ports:
       - "3000:3000"
  
  proxy:
    image: nginx:latest
    ports:
        - "80:80" # host:container
        - "443:443"
    volumes:
        - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
        # connect host's ./nginx.conf with container's nginx.conf
        # :ro == read only perms in container 
    depends_on:
        - postgres  
    links:
        - go:app # [other container]:[alias in this container]
          # creates environment variables in proxy container
          # with ip and port info for go container
          # also creates entries in /etc/hosts with ip info         

volumes:
  db-data:
  front-data: